{
	"info": {
		"_postman_id": "49d4584b-c9c6-41a1-84f3-7d2aef077d9c",
		"name": "Coleccion de postman",
		"description": "### Welcome to Postman! This is your first collection. \n\nCollections are your starting point for building and testing APIs. You can use this one to:\n\n• Group related requests\n• Test your API in real-world scenarios\n• Document and share your requests\n\nUpdate the name and overview whenever you’re ready to make it yours.\n\n[Learn more about Postman Collections.](https://learning.postman.com/docs/collections/collections-overview/)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "49378119",
		"_collection_link": "https://francoiannone2-2828031.postman.co/workspace/frnaco-iannone's-Workspace~ea62af14-6595-4e64-8f1a-e108ec6deec6/collection/49378119-49d4584b-c9c6-41a1-84f3-7d2aef077d9c?action=share&source=collection_link&creator=49378119"
	},
	"item": [
		{
			"name": "UserRoutes",
			"item": [
				{
					"name": "buscar todos los usuarios",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "localhost:3000/user",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nickName\": \"ben11\",\r\n  \"name\": \"benjamin\",\r\n  \"email\": \"soyben10@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/user",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "buscar usuario por id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/user/1",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "actualizar usuario",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"ben@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/user/1/",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user",
								"1",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "obtener posts de usuario",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/user/1/posts",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user",
								"1",
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "borrar usuario",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:3000/user/1",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "crear post",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"descripcion\":\"esto es el primer post\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/user/2/post",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user",
								"2",
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "enviar comentario",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"comentario\":\"que buen post\",\r\n    \"idPost\":3\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/user/2/comment",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user",
								"2",
								"comment"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PostRoutes",
			"item": [
				{
					"name": "buscar todos los post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/post",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"post"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "buscar post por id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/post/3",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"post",
								"3"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "obtener comentarios de un post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/post/5/comment",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"post",
								"5",
								"comment"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "obtener tags de un post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/post/3/tags",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"post",
								"3",
								"tags"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "obtener usuario de un post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/post/4/user",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"post",
								"4",
								"user"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "añadir tags a post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"tags\":[\r\n    {\"tagName\":\"gatos\"}\r\n  ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/post/3/tags",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"post",
								"3",
								"tags"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "añadir imagenes a post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"images\":[\r\n    {\"urlImg\":\"https://www.tooltyp.com/8-beneficios-de-usar-imagenes-en-nuestros-sitios-web/\"}\r\n  ]\r\n}\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/post/4/images",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"post",
								"4",
								"images"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "borrar post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/post/4",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"post",
								"4"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			]
		},
		{
			"name": "Tag routes",
			"item": [
				{
					"name": "buscar todos los tags",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/tag",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tag"
							]
						}
					},
					"response": []
				},
				{
					"name": "buscar tag por id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/tag/1",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tag",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "obtener todos los post con un tag",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/tag/5/posts",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tag",
								"5",
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "crear tag",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"tagName\":\"un tag\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/tag",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"tag"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}