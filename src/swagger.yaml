openapi: 3.0.4
info:
  title: UnaHur - Red Anti-Social
  description: API para gestionar usuarios, posts, tags, comentarios e imágenes.
  version: 1.0.0
servers:
  - url: http://localhost:3000
tags:
  - name: user
    description: todo sobre los usuarios
  - name: post
    description: todo sobre los post
  - name: tag
    description: todo sobre los tags
paths:
  /user:
    get:
      tags:
        - user
      summary: Obtener todos los usuarios
      operationId: getUsers
      responses:
        '200':
          description: Lista de usuarios
    post:
      tags:
        - user
      summary: Agregar usuario a la red antisocial
      description: Crear un nuevo usuario
      operationId: postUser
      requestBody:
        description: Crear un nuevo usuario
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '201':
          description: Usuario creado
        '400':
          description: Esquema invalido
        '406':
          description: El nickname ya esta registrado
  /user/{idUser}:
    parameters:
      - name: idUser
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
        - user
      summary: Obtener usuario por id
      operationId: getUserById
      responses:
        '200':
          description: Usuario encontrado
        '404':
          description: Usuario no encontrado
    put:
      tags:
        - user
      summary: Actualizar usuario con id
      operationId: putUser
      requestBody:
        description: Actualizar usuario
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Usuario actualizado
        '400':
          description: Esquema invalido
        '404':
          description: Usuario no encontrado
        '406':
          description: El nickname ya esta registrado
    delete:
      tags:
        - user
      summary: Eliminar usuario
      operationId: deleteUser
      responses:
        '204':
          description: Usuario eliminado
        '404':
          description: Usuario no encontrado
  /user/{idUser}/posts:
    parameters:
      - name: idUser
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
        - user
      summary: Obtener los posts de un usuario
      operationId: getUserPosts
      responses:
        '200':
          description: Lista de posts del usuario
        '404':
          description: Usuario no encontrado
  /user/{idUser}/post:
    parameters:
      - name: idUser
        in: path
        required: true
        schema:
          type: integer
    post:
      tags:
        - user
      summary: Crear post desde el usuario
      operationId: postUserPosts
      requestBody:
        description: Crear un nuevo post
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      responses:
        '201':
          description: Post creado
        '400':
          description: Esquema invalido
        '404':
          description: Usuario no encontrado
  /user/{idUser}/comment:
    parameters:
      - name: idUser
        in: path
        required: true
        schema:
          type: integer
    post:
      tags:
        - user
      summary: Crear comentario desde el usuario
      operationId: postUserComment
      requestBody:
        description: Crear un nuevo comentario
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      responses:
        '201':
          description: Comentario creado
        '400':
          description: Esquema invalido
        '404':
          description: Usuario o post no encontrado
    put:
        tags:
          - user
        summary: Modificar comentario desde el usuario
        operationId: putUserComment
        requestBody:
          description: Modificar un comentario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateComment'
          required: true
        responses:
          '200':
            description: Comentario modificado
          '400':
            description: Esquema invalido
          '404':
            description: Usuario o comentario no encontrado
    delete:
            tags:
              - user
            summary: Borrar comentario desde el usuario
            operationId: deleteUserComment
            requestBody:
              description: Eliminar un comentario
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/DeleteComment'
              required: true
            responses:
              '204':
                description: Comentario eliminado
              '404':
                description: Usuario o comentario no encontrado
  
  /posts:
    get:
      tags:
        - post
      summary: Listar posts
      operationId: listPosts
      responses:
        '200':
          description: Lista de posts
  /posts/{idPost}:
    parameters:
      - name: idPost
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
        - post
      summary: Obtener post por id
      operationId: getPostById
      responses:
        '200':
          description: Post encontrado
        '404':
          description: Post no encontrado
    delete:
      tags:
        - post
      summary: Eliminar post
      operationId: deletePost
      responses:
        '204':
          description: Post eliminado
        '404':
          escription: Post no encontrado
    put:
        tags:
          - post
        summary: Modificar post
        operationId: putPost
        requestBody:
          description: Modificar un post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          required: true
        responses:
          '200':
            description: Post modificado
          '400':
            description: Esquema invalido
          '404':
            description: Post no encontrado
  /posts/{idPost}/comments:
    parameters:
      - name: idPost
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
        - post
      summary: Listar comentarios de un post
      operationId: listCommentsForPost
      responses:
        '200':
          description: Lista de comentarios
        '404':
          description: Post no encontrado
  /posts/{isPost}/images:
    parameters:
      - name: postId
        in: path
        required: true
        schema:
          type: integer
    post:
      tags:
        - post
      summary: Agregar imagen a un post
      operationId: addImageToPost
      responses:
        '201':
          description: Imagen agregada
        '400':
          description: Datos inválidos
        '404':
          description: Post no encontrado
    delete:
      tags:
        - post
      summary: Eliminar imagen de post
      operationId: deletePostImage
      responses:
        '204':
          description: Imagen eliminada
        '404':
          escription: Post no encontrado
  /posts/{idPost}/tags:
    parameters:
      - name: idPost
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
        - post
      summary: Listar tags de un post
      operationId: listTagsForPost
      responses:
        '200':
          description: Lista de Tags
        '404':
          description: Post no encontrado
    post:
      tags:
        - post
      summary: Agregar tag a un post
      operationId: addTagToPost
      responses:
        '201':
          description: Tag agregado
        '400':
          description: Datos inválidos
        '404':
          description: Post no encontrado
    delete:
      tags:
          - post
      summary: Eliminar tag de post
      operationId: deletePostTag
      responses:
        '204':
          description: Tag eliminado
        '404':
          escription: Post no encontrado
  
  /tag:
    get:
      tags:
        - tag
      summary: Listar tags
      operationId: listTags
      responses:
        '200':
          description: Lista de tags
        '400':
          description: Error en la petición
    post:
      tags:
        - tag
      summary: Agregar un tag
      operationId: createTag
      responses:
        '201':
          description: Tag creado
        '400':
          description: Entrada no válida
        '406':
          description: Tag ya existe
    delete:
      tags:
        - tag
      summary: Eliminar tag
      operationId: deleteTag
      responses:
        '204':
          description: Tag eliminado
        '404':
          escription: Tag no encontrado
  /tag/{idTag}:
    parameters:
      - name: idTag
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
        - tag
      summary: obtener tag
      operationId: getTag
      responses:
        '200':
          description: Tag encontrado
        '404':
          description: Tag no encontrado
  /tag/{idTag}/posts:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      tags:
        - tag
      summary: Listar posts asociados a un tag
      operationId: listPostsByTag
      responses:
        '200':
          description: Lista de posts
        '404':
          description: Tag no encontrado

components:
  schemas:
    User:
      type: object
      properties:
        nickName:
          type: string
          minLength: 3
          maxLength: 20
          example: "usuario123"
        name:
          type: string
          minLength: 3
          maxLength: 20
          example: "Juan Pérez"
        email:
          type: string
          format: email
          minLength: 3
          maxLength: 70
          pattern: '^[^\\s@]+@[^\\s@]+\\.(com|net)$'  # restringe TLDs a .com/.net
          example: "juan@dominio.com"
      required:
        - nickName
        - name
        - email
    Post:
      type: object
      properties:
        descripcion:
          type: string
          minLength: 3
          example: "Contenido del post"
      required:
        - description
    Tag:
      type: object
      properties:
        id:
          type: integer
          example: 1
        tagName:
          type: string
          minLength: 3
          maxLength: 25
          example: "javascript"
      required:
        - tagName
    PostImage:
      type: object
      properties:
        id:
          type: integer
          example: 1
        urlImg:
          type: string
          format: uri
          description: URL de la imagen
          example: "https://example.com/image.jpg"
      required:
        - urlImg
    Comment:
      type: object
      properties:
        id:
          type: integer
          example: 1
          readOnly: true
        comentario:
          type: string
          minLength: 3
          maxLength: 200
          example: "Muy buen post!"
        idPost:
          type: integer
          minimum: 1
          example: 5
      required:
        - comentario
        - idComment
    UpdateComment:
          type: object
          properties:
            comentario:
              type: string
              minLength: 3
              maxLength: 200
              example: "Muy mal post"
            idComment:
              type: integer
              minimum: 1
              example: 5
          required:
            - comentario
            - idComment
    DeleteComment:
      type: object
      properties:
        idComment:
          type: integer
          minimum: 1
          example: 5
      required:
        - idComment

